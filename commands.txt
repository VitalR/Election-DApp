// Start the project with truffle unbox
$ truffle unbox pet-shop
✔ Preparing to download box
✔ Downloading
npm WARN pet-shop@1.0.0 No description
npm WARN pet-shop@1.0.0 No repository field.

✔ cleaning up temporary files
✔ Setting up box


$ truffle migrate

// Test the Contract
$ truffle console
truffle(development)> 
> Election.deployed().then(function(instance) { app = instance })
undefined
truffle(development)> app.address
'0x79DF9b4c84eE6AdecDCc52B98689E3Fb003'
truffle(development)> app.candidate()
'Candidate 1'

// After changing the Contracts
$ truffle migrate --reset

> .exit
$ truffle console

// Inspect deployed data
> Election.deployed().then(function(i) { app=i; })
undefined
> app.candidates(1)
Result {
  '0': <BN: 1>,
  '1': 'Candidate 1',
  '2': <BN: 0>,
  id: <BN: 1>,
  name: 'Candidate 1',
  voteCount: <BN: 0> }


> app.candidates(1).then(function(c) { candidate = c; })
undefined
truffle(development)> candidate
Result {
  '0': <BN: 1>,
  '1': 'Candidate 1',
  '2': <BN: 0>,
  id: <BN: 1>,
  name: 'Candidate 1',
  voteCount: <BN: 0> }

truffle(development)> candidate[0]
<BN: 1>
truffle(development)> candidate[1]
'Candidate 1'
truffle(development)> candidate[2]
<BN: 0>

> candidate[0].toNumber()
1
> candidate[2].toNumber()
0

> web3.eth.getAccounts()
> web3.eth.getAccounts().then(function(acc) { accounts=acc })
undefined
truffle(development)> accounts[0]
'0x5A4bFc48B1B2b99F310c85250f50A7A8c0df'


// Add tests and run them
$ truffle test
Using network 'development'.

Compiling your contracts...
===========================
> Everything is up to date, there is nothing to compile.