// Start the project with truffle unbox
$ truffle unbox pet-shop
✔ Preparing to download box
✔ Downloading
npm WARN pet-shop@1.0.0 No description
npm WARN pet-shop@1.0.0 No repository field.

✔ cleaning up temporary files
✔ Setting up box


$ truffle migrate

// Test the Contract
$ truffle console
truffle(development)> 
> Election.deployed().then(function(instance) { app = instance })
undefined
truffle(development)> app.address
'0x79DF9b4c84eE6AdecDCc52B98689E3Fb003'
truffle(development)> app.candidate()
'Candidate 1'

// After changing the Contracts
$ truffle migrate --reset

> .exit
$ truffle console

// Inspect deployed data
> Election.deployed().then(function(i) { app=i; })
undefined
> app.candidates(1)
Result {
  '0': <BN: 1>,
  '1': 'Candidate 1',
  '2': <BN: 0>,
  id: <BN: 1>,
  name: 'Candidate 1',
  voteCount: <BN: 0> }


> app.candidates(1).then(function(c) { candidate = c; })
undefined
truffle(development)> candidate
Result {
  '0': <BN: 1>,
  '1': 'Candidate 1',
  '2': <BN: 0>,
  id: <BN: 1>,
  name: 'Candidate 1',
  voteCount: <BN: 0> }

truffle(development)> candidate[0]
<BN: 1>
truffle(development)> candidate[1]
'Candidate 1'
truffle(development)> candidate[2]
<BN: 0>

> candidate[0].toNumber()
1
> candidate[2].toNumber()
0

> web3.eth.getAccounts()
> web3.eth.getAccounts().then(function(acc) { accounts=acc })
undefined
truffle(development)> accounts[0]
'0x5A4bFc48B1B2b99F310c85250f50A7A8c0df'


// Add tests and run them
$ truffle test
Using network 'development'.

Compiling your contracts...
===========================
> Everything is up to date, there is nothing to compile.


// Add frontend
$ truffle migrate --reset

// Run lite-server
$ npm run dev
> pet-shop@1.0.0 dev /election-dapp
> lite-server
[Browsersync] Access URLs:
 --------------------------------------
       Local: http://localhost:3000
    External: http://192.168.0.101:3000
 --------------------------------------
          UI: http://localhost:3001
 UI External: http://localhost:3001
 --------------------------------------
[Browsersync] Serving files from: ./src
[Browsersync] Serving files from: ./build/contracts
[Browsersync] Watching files...
21.02.24 21:45:32 200 GET /index.html

// Connect new voter account in MetaMask with DApp

// Add voteCast func in the Contract, redeploy the Contract
$ truffle migrate --reset

> web3.eth.getAccounts().then(function(i) { accounts = i })
undefined
truffle(development)> accounts[0]
'0x3212e6470BFb440080bEdC0F1e319B440b5aB'
truffle(development)> 
undefined
truffle(development)> app.voteCast(1, { from: accounts[0] })
{ tx:
   '0x6255d941e2324fbaf61430c3a773f8a2897dd2ece587801377cf5900bb51a',
  receipt:
   { transactionHash:
      '0x6255d941e2324fbaf61430c3a773f8a2897dd2ece587801377cf5900bb51a',
     transactionIndex: 0,
     blockHash:
      '0xc4aeb910ee780d6a651877e6f25bb9fa2acab355294f4d858c7d5393d327f',
     blockNumber: 29,
     from: '0x3212e6470bfb440080bedc0f1e319b440b5ab',
     to: '0x5d1debf2b32dd720dce453218a7f695754536',
     gasUsed: 63353,
     cumulativeGasUsed: 63353,
     contractAddress: null,
     logs: [],
     status: true,
     logsBloom:
      '0x
     rawLogs: [] },
  logs: [] }
truffle(development)> 